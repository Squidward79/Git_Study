<<GIT 의 기본>>

1. 버전관리,이력 관리 저장소

2. 원격저장소(Remote Repository) 와 로컬저장소
    - 로컬에 내려받는걸 Pull, 원격에 올리는걸 Push

 3. 저장소 만들기
    - 새 저장소를 만들거나, 이미 존재하는 원격저장소를 로컬로 복사.

 4. 커밋(Commit)
    - 커밋을 하면 변경사항이 저장소에 기록된다.
    - 커밋에는 영문/숫자로 이루어진 40자리 고유 이름이 붙는다. 
    - 커밋은 이력을 남기는 작업으로, 반드시 메시지를 남겨야 한다.
        @ Git에서 권장하는 메시지 형식
            1번째 줄 : 커밋 내의 변경내용을 요약
            2번째 줄 : 빈칸
            3번째 줄 : 변경한 이유

5. 작업트리(Work Tree)와 인덱스(Index)
    - 흔히 말하는 폴더를 작업트리라고 부른다.
    - 커밋을 실행하기 전 저장소와 작업트리 사이의 공간을 인덱스라고 부른다.
    - 커밋을 하려면 작업트리의 변경 내용을 인덱스에 기록(Stage 이라고도 함)
    - 커밋할 파일을 선별할 수 있는 공간이기도 하다.

//////////////////////////////////////// 튜토리얼

6. 새 저장소 만들기 
    -(git bash) 해당폴더에서 $ git init 명령어를 사용하면 저장소로 등록

7. 파일 커밋하기
    1) Git의 관리하에 있는 폴더의 작업트리와 인덱스 상태를 확인하려면
        $ git status  명령어를 사용한다. 
    2) 이력 추적 대상이 되지 않은 파일은 untracked files 라고 표시된다.
        처음 한번만 인덱스에 등록하면 추적 대상으로 등록할 수 있다.
    3) 파일을 인덱스에 등록하려면 add를 쓴다
        $ git add <file>.. 
        @ 파일 뒤에 한칸 띄어쓰기로 여러 파일 한번에 지정 가능
        @ 파라미터에 . 를 지정하면 모든 파일을 인덱스에 등록 가능 

    4) 커밋하려면 commit 를 쓴다
        $ git commit -m "<Message>"
    5) 변경사항이 커밋된다. 
        @ 변경 이력은 $ git log 로 확인 가능하다.
    
////////////////////////////////////////

<< 저장소 공유 >>

1. 원격 저장소에 Push하기
    - push : 로컬의 변경 이력을 원격 저장소에 업로드하는 것

2. 원격 저장소 Clone 하기
    - 원격 저장소의 내용을 통째로 다운로드 하는 것 
    - 변경 이력도 함께 로컬로 복제된다.

3. 원격 저장소에서 Pull 해오기
    - 원격 저장소에서 로컬 저장소로 업데이트 하는 것
    - 최신 변경 이력을 다운로드하여 로컬에 적용한다.

//////////////////////////////////////// 튜토리얼

4. 원격 저장소 생성 
    - git hub 같은 곳에 저장소를 만든다.

5. 원격 저장소에 Push 하기
    - 원격 저장소의 주소는 이름으로 기록할 수 있다.
    - 원격 저장소를 추가하려면 remote add 명령어를 사용 
        $ git remote add <name> <url>
            @ name 은 등록명, url 은 원격저장소의 주소
    
    - push하려면 push 명령어를 사용
        $ git push <repository> <refspec> ...
            @ repository 는 push의 경로 주소, refspec은 push할 브랜치 지정

